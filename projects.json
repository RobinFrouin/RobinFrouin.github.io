{
    "projects": {
        "project1": {
            "html": "<div class='project-container center'><h2 class='title-center'>Programmation Avancée</h2><h3 class='title-left'>But du projet :</h3><p>Développer un outil de stéganographie avec une interface utilisateur permettant de cacher et récupérer des données dans les couleurs d’une image Bitmap (.bmp).</p><h3 class='title-left'>Réalisation :</h3><ul class='text-left'><li>Encapsulation de la librairie Bitmap de Windows.</li><li>Création d’une interface utilisateur minimaliste pour manipuler les images.</li><li>Implémentation de fonctions pour charger, sauvegarder, écrire et lire des données dans les images.</li><li>Gestion du multithreading pour éviter le blocage de l’application pendant le traitement des images.</li></ul><h3 class='title-left'>Compétences acquises :</h3><ul class='text-left'><li>Encapsulation et utilisation de librairies C++.</li><li>Développement d’interfaces utilisateur avec la librairie UI de Windows.</li><li>Manipulation des couleurs RGB pour la stéganographie.</li><li>Gestion de la mémoire et optimisation des performances.</li></ul><h3 class='title-left'>Technologies utilisées :</h3><ul class='text-left'><li>C++, Windows Bitmap Library, Multithreading.</li></ul></div>",
            "js": "console.log('Programmation Avancée Project Loaded');"
        },
        "project2": {
            "html": "<div class='project-container center'><h2 class='title-center'>Gestion de Balles avec Collisions</h2><h3 class='title-left'>But du projet :</h3><p>Créer une application Windows permettant de gérer des balles en mouvement avec collisions, compilée en versions GDI et SFML.</p><h3 class='title-left'>Réalisation :</h3><ul class='text-left'><li>Mise en place d’une architecture solide avec encapsulation des variables et fonctions globales.</li><li>Utilisation de la librairie GDI et SFML pour le rendu graphique.</li><li>Implémentation de textures BMP avec transparence et gestion des collisions.</li><li>Affichage des performances en temps réel (framerate, nombre de balles, etc.).</li></ul><h3 class='title-left'>Compétences acquises :</h3><ul class='text-left'><li>Encapsulation et gestion de la mémoire en C++.</li><li>Utilisation de directives de préprocesseur pour compiler différentes versions.</li><li>Optimisation des performances et gestion des ressources.</li></ul><h3 class='title-left'>Technologies utilisées :</h3><ul class='text-left'><li>C++, GDI, SFML.</li></ul></div>",
            "js": "console.log('Gestion de Balles avec Collisions Project Loaded');"
        },
        "project3": {
            "html": "<div class='project-container center'><h2 class='title-center'>Jeu de Rugby Simplifié avec IA</h2><h3 class='title-left'>But du projet :</h3><p>Développer un jeu de rugby simplifié en C++ avec SFML, où deux équipes d’IA s’affrontent.</p><h3 class='title-left'>Réalisation :</h3><ul class='text-left'><li>Implémentation de comportements d’IA basés sur des State Machines.</li><li>Gestion des interactions entre joueurs et du ballon.</li><li>Développement d’outils de debug pour tester différentes situations de jeu.</li></ul><h3 class='title-left'>Compétences acquises :</h3><ul class='text-left'><li>Programmation d’IA en C++.</li><li>Utilisation de State Machines pour structurer les comportements.</li><li>Développement d’outils de debug spécifiques.</li></ul><h3 class='title-left'>Technologies utilisées :</h3><ul class='text-left'><li>C++, SFML, State Machines.</li></ul></div>",
            "js": "console.log('Jeu de Rugby Simplifié avec IA Project Loaded');"
        },
        "project4": {
            "html": "<div class='project-container center'><h2 class='title-center'>FPS Prototype sur Unity 3D</h2><h3 class='title-left'>But du projet :</h3><p>Créer un prototype de jeu FPS en solo avec des mécaniques de base et une direction artistique low poly.</p><h3 class='title-left'>Réalisation :</h3><ul class='text-left'><li>Implémentation des déplacements et interactions du joueur.</li><li>Création de systèmes de dégâts et d’IA pour les ennemis.</li><li>Développement de VFX et d’animations pour les armes et les ennemis.</li><li>Conception d’un level design simple avec ambiance sonore.</li></ul><h3 class='title-left'>Compétences acquises :</h3><ul class='text-left'><li>Développement de jeux vidéo avec Unity 3D.</li><li>Création de systèmes d’IA et de gameplay.</li><li>Utilisation de l’URP pour un rendu graphique optimisé.</li></ul><h3 class='title-left'>Technologies utilisées :</h3><ul class='text-left'><li>Unity 3D, C#, URP.</li></ul></div>",
            "js": "console.log('FPS Prototype sur Unity 3D Project Loaded');"
        },
        "project5": {
            "html": "<div class='project-container center'><h2 class='title-center'>Unity Shader et Feedback Visuels</h2><h3 class='title-left'>But du projet :</h3><p>Produire des shaders et intégrer des feedbacks visuels dans un jeu A-RPG stylisé.</p><h3 class='title-left'>Réalisation :</h3><ul class='text-left'><li>Création de shaders avec ShaderGraph et programmation en HLSL.</li><li>Intégration de feedbacks visuels (particules, effets de shader, etc.).</li><li>Développement d’un système de combat A-RPG dans une petite map stylisée.</li></ul><h3 class='title-left'>Compétences acquises :</h3><ul class='text-left'><li>Création et programmation de shaders avec Unity.</li><li>Intégration de feedbacks visuels pour enrichir l’expérience de jeu.</li><li>Développement de systèmes de combat et de gameplay.</li></ul><h3 class='title-left'>Technologies utilisées :</h3><ul class='text-left'><li>Unity, ShaderGraph, HLSL.</li></ul></div>",
            "js": "console.log('Unity Shader et Feedback Visuels Project Loaded');"
        }
    }
}